# Define la versión de la API de Kubernetes que se está utilizando
apiVersion: v1
# Especifica que este recurso es un Service
kind: Service
metadata:
  # Asigna un nombre al Service
  name: bookmarker-api-svc
spec:
  # Define el tipo de servicio (NodePort permite acceder al servicio desde fuera del clúster)
  type: NodePort
  # Selector para encontrar los pods que este servicio debe dirigir
  selector:
    app: bookmarker-api-pod  # Selecciona los pods etiquetados con app=bookmarker-api-pod
  # Define los puertos que este servicio expondrá
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30090
# https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
---
# Define la versión de la API para la próxima sección
apiVersion: apps/v1
# Especifica que este recurso es un Deployment
kind: Deployment
metadata:
  # Asigna un nombre al Deployment
  name: bookmarker-api-deployment
spec:
  # Define cuántas réplicas del pod se deben mantener
  replicas: 1  # Mantener una única réplica del pod
  # Selector para identificar qué pods deben ser gestionados por este Deployment
  selector:
    matchLabels:
      app: bookmarker-api-pod  # Busca los pods con esta etiqueta
  template:
    metadata:
      labels:
        app: bookmarker-api-pod  # Etiqueta para los pods creados por este Deployment
    spec:
      containers:
      - name: bookmarker  # Nombre del contenedor
        # Imagen del contenedor que se utilizará
        image: thomrdev/bookmarker-api
        ports:
          - containerPort: 8080  # Puerto expuesto por el contenedor
        env:  # Variables de entorno para configurar el contenedor
          - name: SPRING_PROFILES_ACTIVE  # Perfil activo para Spring
            value: k8s  # Configuración para entornos de Kubernetes
          - name: DB_HOST  # Variable para el host de la base de datos
            valueFrom:
              configMapKeyRef:  # Obtiene el valor de un ConfigMap
                key: postgres_host  # Clave en el ConfigMap
                name: bookmarker-config  # Nombre del ConfigMap
          - name: DB_PORT  # Variable para el puerto de la base de datos
            valueFrom:
              configMapKeyRef:
                key: postgres_port  # Clave en el ConfigMap
                name: bookmarker-config  # Nombre del ConfigMap
          - name: DB_DATABASE  # Variable para el nombre de la base de datos
            valueFrom:
              configMapKeyRef:
                key: postgres_dbname  # Clave en el ConfigMap
                name: bookmarker-config  # Nombre del ConfigMap
          - name: DB_USERNAME  # Variable para el usuario de la base de datos
            valueFrom:
              secretKeyRef:  # Obtiene el valor de un Secret
                key: postgres_username  # Clave en el Secret
                name: bookmarker-secrets  # Nombre del Secret
          - name: DB_PASSWORD  # Variable para la contraseña de la base de datos
            valueFrom:
              secretKeyRef:
                key: postgres_password  # Clave en el Secret
                name: bookmarker-secrets  # Nombre del Secret
